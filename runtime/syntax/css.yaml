filetype: css

detect:
    filename: "\\.(css|scss)$"

rules:
    # Classes and IDs
    - statement: "(?i)."
    - default:
        start: "[{]"
        end: "[}]"
        limit-group: symbol.brackets
        rules: 
    # css commands
    # Breaking up that monolith of a regex and using grouping
        - type: "(align(-content|-items|ment-baseline|-self)|all|animation(-delay|-direction|-duration|-fill-mode|-iteration-count|-name|-play-state|-timing-function)?|appearance|azimuth|back(face-visibility|ground(-attachment|-blend-mode|-clip|-color|-image|-origin|-position|-repeat|-size)?)|baseline-shift|bookmark(-label|-level|-state)|border(-(bottom|top)(-color|-(left|right)-radius|-style|-width)|-boundary|-collapse|-color|-image(-outset|-repeat|-slice|-source|-width)?|-(left|right)(-color|-style|-width)?|-radius|-spacing|-style|-width)?|bottom|box(-decoration-break|-shadow|-sizing|-snap|-suppress)|break(-after|-before|-inside)|caption-side)"
        - type: "(caret(-animation|-color|-shape)?|chains|clear|clip(-path|-rule)?|color(-interpolation-filters)?|column(-count|-fill|-gap|-rule(-color|-style|-width)?|s|-span|-width)|content|continue)"
        - type: "(counter(-increment|-reset|-set)|cue(-after|-before)?|cursor|direction|display|dominant-baseline|elevation|empty-cells|filter|flex(-basis|-direction|-flow|-glow|-shrink|-wrap)?|float(-defer|-offset|-reference)?)"
        - type: "(flood(-color|opacity)|flow(-from|-into)?|font(-family|-feature-settings|-kerning|-language-override|-size(-adjust)?|-stretch|-style|-synthesis|-variant(-alternates|-caps|-east-asian|-ligatures|-numeric|-position)?|-weight)?)"
        - type: "(footnote(-display|-policy)|glyph-orientation-vertical|grid(-area|-auto(-columns|-flow|-rows)|-column(-end|-gap|-start)?|-gap|-row(-end|-gap|-start)?|-template(-areas|-columns|-rows)?)?)"
        - type: "(hanging-punctuation|height|hyphen(ate(-character|limit(-chars|-last|-lines|-zone))|s)|image(-orientation|-rendering|-resolution))"
        - type: "(initial-letter(-align|wrap)?|isolation|justify(-content|-items|-self)|left|letter-spacing|lighting-color|line(-break|-grid|-height|-snap)|list-style(-image|position|type))"
        - type: "(margin(-bottom|-left|-right|-top)?|marker(-end|knockout(-left|right)?|-mid|-pattern|-segment|-side|-start)?|marquee(-diretion|-loop|-speed|-style))"
        - type: "(mask(-border(-mode|-outset|-repeat|-slice|-source|-width)?|-clip|-composite|-image|-mode|-origin|-position|-repeat|-size|-type)?|max(-height|-lines|-width)|min(-height|width))"
        - type: "(mix-blend-mode|motion(-offset|-path|-rotation)?|nav(-down|-left|-right|-up)|object(-fit|-position)|offset(-after|-before|-end|-start))"
        - type: "(opacity|order|orphans|outline(-color|-offset|-style|-width)?|overflow(-style|-wrap|-x|-y)?|padding(-bottom|-left|-right|-top)?|page(-break(-after|-before|-inside))?)"
        - type: "(pause(-after|-before)?|pitch(-range)?|play-during|polar(-anchor|-angle|-distance|-origin)?|position|presentation-level|quotes|region-fragment|resize)"
        - type: "(rest(-after|-before)|richness|right|rotation(-point)?|ruby(-align|-merge|-position)|running)"
        - type: "(scroll-behavior|scroll-snap(-align|-margin(-block(-end|start)?|-bottom|-inline(-end|-start)?|-left|-right|-top)?|-padding(-block(-end|-start)?|-bottom|-inline(-end|-start)?|-left|-right|-top)?|-type)?)"
        - type: "(shape(-image-threshold|-inside|-margin|-outside)|size|speak(-as|-header|-numeral|-punctuation|-rate)?|stress|string-set|stroke(-alignment|-dash(adjust|array|corner|offset)|-line(cap|join)?|-miterlimit|-opacity|-width)?)"
        - type: "(tab(le-layout|-size)|text(-align(-all|last)?|-combine-upright|-decoration(-color|-line|-skip|-style)?|-emphasis(-color|-position|-style)?|-indent|-justify|-orientation|-overflow|-shadow|-space(-collapse|-trim)?|-spacing|-transform|-underline-position|-wrap))"
        - type: "(top|transform(-box|-origin|-style)?|transition(-delay|-duration|-property|-timing-function)?|unicode-bidi|user-select)"
        - type: "(vertical-align|visibility|voice(-balance|-family|-pitch|-range|-rate|-stress|-volume)|volume)"
        - type: "(white-space|wid(ows|th)|will-change|word(-break|-spacing|-wrap)|wrap(-after|-before|-flow|-inside|-through)|writing-mode|z-index)"
        - default:
            start: ":"
            end: ";"
            limit-group: symbol
            rules: 
                - constant.number: "(?i)#[0-9A-F]{6,6}"
    - special: "!important"
    - identifier: ":active|:focus|:hover|:link|:visited|:link|:after|:before|$"
    - symbol.brackets: "[{}()]"
    - symbol: "(\\;|:|\\]|~|<|>|,)"
    # SCSS Varaibles
    - preproc: "@import|@mixin|@extend"
    # Strings
    #- constant.string:
    #    start: "\""
    #    end: "\""
    #    skip: "\\\\."
    #    rules:
    #        - constant.specialChar: "\\\\."
    #- constant.string:
    #    start: "'"
    #    end: "'"
    #    skip: "\\\\."
    #    rules:
    #        - constant.specialChar: "\\\\."
    # Comments & TODOs
    - comment:
        start: "\\/\\*"
        end: "\\*\\/"
        rules:
            - todo: "(TODO|XXX|FIXME):?"
