filetype: gdscript

detect:
    filename: "\\.gd$"

rules:
    # built-in objects
    - constant: "\\b(null|self)"
    - constant.bool: "\\b(true|false)\\b"
      # built-in attributes
      # color constant "\\b()\\b"
      # built-in functions
    - identifier: "\\b(abs|acos|asin|atan|atan2|ceil|clamp|convert|cos|cosh|db2linear|decimals|deg2rad|ease|exp|float|floor|fmod|fposmod|hash|int|isinf|isnan|lerp|linear2db|load|log|max|min|nearest_po2|pow|preload|print|printerr|printraw|prints|printt|rad2deg|rand_range|rand_seed|randomize|randi|randf|range|round|seed|sin|slerp|sqrt|str|str2var|tan|typeof|var2str|weakref)\\b"
      # special method names
    - identifier: "\\b(Animation(Tree)?Player|Button|Control|HTTPClient|HTTPRequest|Input|InputEvent|MainLoop|Node(2D)?|SceneTree|Spatial|SteamPeer|PacketPeer(UDP)?|Timer|Tween)\\b"
      # types
    - type: "\\bVector(2|3)\\b"
      # definitions
    - identifier: "func [a-zA-Z_0-9]+" 
      # keywords
    - statement: "\\b(and|as|assert|break|breakpoint|class|const|continue|elif|else|export|extends|for|func|if|in|map|not|onready|or|pass|return|signal|var|while|yield)\\b" 

      # decorators
    - special: "@.*[(]"

      # operators
    - symbol.operator: "[.:;,+*|=!\\%@]|<|>|/|-|&"

      # parentheses
    - symbol.brackets: "[(){}]|\\[|\\]"

      # numbers
    - constant: "\\b[0-9]+\\b"
    - constant.number: "\\b([0-9]+|0x[0-9a-fA-F]*)\\b|'.'"

    - comment:
        start: "\"\"\""
        end: "\"\"\""
        rules:
            - todo: "(TODO|XXX|FIXME):?"

    - comment:
        start: "'''"
        end: "'''"
        rules:
            - todo: "(TODO|XXX|FIXME):?"

    - constant.string:
        start: "\""
        end: "\""
        skip: "\\\\."
        rules:
            - constant.specialChar: "\\\\([0-7]{3}|x[A-Fa-f0-9]{2}|u[A-Fa-f0-9]{4}|U[A-Fa-f0-9]{8})"

    - constant.string:
        start: "'"
        end: "'"
        skip: "\\\\."
        rules:
            - constant.specialChar: "\\\\([0-7]{3}|x[A-Fa-f0-9]{2}|u[A-Fa-f0-9]{4}|U[A-Fa-f0-9]{8})"

    - constant.string:
        start: "`"
        end: "`"
        rules: []

    - comment:
        start: "#"
        end: "$"
        rules:
            - todo: "(TODO|XXX|FIXME):?"

