filetype: php

detect: 
    filename: "\\.php[2345s~]?$"

rules:
    - include: html
    - default: 
        start: "<\\?(php|=)" 
        end: "\\?>"
        limit-group: preproc
        rules: 
           - identifier.class: "([a-zA-Z0-9_-]+)\\("
           - preproc: "(require|include|require_once|include_once)"
           - type: "\\b(var|class|extends|function|echo|case|default|exit|switch|extends|as|define|do|declare|in|trait|interface|[E|e]xception|array|int|string|bool|iterable|void)\\b"
           - identifier.class: "[a-zA-Z\\\\]+::"
           - identifier: "([A-Z][a-zA-Z0-9_]+)\\s"
           - identifier: "([A-Z0-9_]+)[;|\\s|\\)|,]"
           - type.keyword: "(global|public|private|protected|static|const)"
           - statement: "(implements|abstract|instanceof|if|else(if)?|endif|namespace|use|as|new|throw|catch|try|while|print|(end)?(foreach)?)\\b"
           - identifier: "new\\s([a-zA-Z0-9\\\\]+)"
           - special: "(break|continue|goto|return)"
           - constant.bool: "(true|false|null|TRUE|FALSE|NULL)"
           - constant: "[\\s|=|\\s|\\(|/|+|-|\\*|\\[]"
           - constant.number: "[0-9]"
           - identifier: "(\\$this|parent|self|\\$this->)"
           - symbol.operator: "(=>|===|!==|==|!=|&&|\\|\\||::|=|->|\\!)"
           - identifier.var: "(\\$[a-zA-Z0-9\\-_]+)"
           - symbol.operator: "[\\(|\\)|/|+|\\-|\\*|\\[|.|,|;]"
           - constant.string: "\"(\\\\.|[^\"])*\"|'(\\\\.|[^'])*'"
           - constant.specialChar: "\\\\[abfnrtv'\\\"\\\\]"
           - symbol.brackets: "(\\[|\\]|\\{|\\}|[()])"
           - comment: "(^|[[:space:]])//.*"
           - comment: "(^|[[:space:]])#.*"
           - comment:
               start: "/\\*"
               end: "\\*/"
               rules: []
